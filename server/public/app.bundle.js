(()=>{"use strict";function e(e,t){const o=document.createElement(e);return t&&(o.className=t),o}function t(e,t,o){e.forEach((e=>{let n,s,i;Array.isArray(e)?[n,s,i]=e:[n,s,i]=[e,t,o],n.style[s]=i}))}function o(e){return e[0].toUpperCase()+e.slice(1)}const n=document.body;new class{constructor(e,t){this.model=e,this.view=t,this.model.onBooksUpdated=this.onBooksUpdated.bind(this),this.view.onBookEdited=this.onBookEdited.bind(this),this.view.onBookDeleted=this.onBookDeleted.bind(this),this.view.onBookAdded=this.onBookAdded.bind(this)}onBooksUpdated(e){this.view.populateTable(e)}onBookEdited(e,t){return this.model.editBookById(e,t)}onBookDeleted(e){return this.model.deleteBookById(e)}onBookAdded(e){return this.model.addBook(e)}}(new class{constructor(){this.books=[],this.updateBooks(),this.onBooksUpdated=()=>{}}updateBooks(){this.constructor.getBooks().then((e=>{console.log(e),this.books=e,this.onBooksUpdated(e)}))}static getBooks(){return fetch("/api/books").then((e=>e.json()))}static getBookById(e){return fetch(`/api/books/${e}`).then((e=>e.json()))}addBook(e){return fetch("/api/books",{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}}).then((e=>{this.updateBooks(),e.json()}))}deleteBookById(e){return fetch(`/api/books/${e}`,{method:"DELETE"}).then((e=>{this.updateBooks(),e.json()}))}editBookById(e,t){return fetch(`/api/books/${e}`,{method:"PUT",body:JSON.stringify(t),headers:{"Content-Type":"application/json"}}).then((e=>{this.updateBooks(),e.json()}))}},new class{constructor(e){this.parent=e,this.headers=["Id","Title","Author","Year","Description","Genres","Available","Sold","Price","Controls"],this.cellOrder=["id","title","author","year","description","genres","available","sold","price"],this.spinner=function(){const e=document.createElement("div");e.className="spinner-container";const t=document.createElement("div");t.className="lds-default";for(let e=0;e<12;e+=1){const e=document.createElement("div");t.append(e)}return e.toggle=()=>{e.style.display="none"===e.style.display?"flex":"none"},e.style.display="none",e.append(t),e}(),this.createTable(),e.append(this.table),this.placeholderBook={id:null,title:null,author:null,year:null,description:"By editing and saving this row you can add books. Id will be generated automatically.",genres:null,available:null,sold:null,price:null},this.onBookEdited=()=>{},this.onBookDeleted=()=>{},this.onBookAdded=()=>{}}createTable(){this.table=e("table","book-table"),this.thead=e("thead"),this.tbody=e("tbody"),this.createHeaderRow(),this.thead.append(this.headerRow),this.table.append(this.thead,this.tbody)}createHeaderRow(){return this.headerRow=document.createElement("tr"),this.headers.forEach((e=>{const t=document.createElement("th");t.textContent=e,this.headerRow.append(t)})),this.headerRow}populateTable(e){const t=document.createDocumentFragment(),o=this.createBookRow(this.placeholderBook);t.append(o),e.forEach((e=>{const o=this.createBookRow(e);t.append(o)})),this.tbody.innerHTML="",this.tbody.append(t)}createBookRow(o){const n=document.createElement("tr"),s=Object.entries(o),i=o.id;s.forEach((t=>{const[o,s]=t,i=e("td");switch(o){case"description":{const t=e("div","book-table__book-description");t.textContent=s,i.append(t);break}case"price":i.textContent=s?`$${s}`:"Not specified";break;case"genres":i.textContent=s?s.join(", "):"";break;default:i.textContent=s}n.append(i)}));const d=[...n.children],a=document.createElement("td"),l=Array(5).fill().map((()=>document.createElement("button"))),[r,c,h,p,u]=l;r.textContent="Edit",c.textContent="Cancel",h.textContent="Save",p.textContent="Delete",u.textContent="Yes",t([c,u,h],"display","none");const k=document.createElement("div");k.textContent="You sure about that?",k.hidden=!0;let b=null;return r.addEventListener("click",(()=>{d.forEach((e=>{e.contentEditable=!0})),t([r,p],"display","none"),t([c,h],"display","inline")})),c.addEventListener("click",(()=>{n.replaceWith(this.createBookRow(o))})),h.addEventListener("click",(()=>{const e=Object.create(o);d.forEach(((t,o)=>{t.contentEditable=!1,e[this.cellOrder[o]]=this.extractDataFromCell(t,o)})),console.log(e),b=()=>{this.spinner.toggle(),(()=>null===i?this.onBookAdded(e):this.onBookEdited(i,e))().finally((()=>{this.spinner.toggle()}))},t([[k,"display","block"],[h,"display","none"],[u,"display","inline"]])})),p.addEventListener("click",(()=>{b=()=>{this.spinner.toggle(),this.onBookDeleted(i).then((()=>{n.remove()})).finally((()=>{this.spinner.toggle()}))},t([r,p],"display","none"),t([c,u],"display","inline"),t([k],"display","block")})),u.addEventListener("click",(()=>{b(),b=null,t([k,u,c],"display","none"),t([r,p],"display","inline")})),a.append(k,r,c,u,p,h),n.append(a),n}extractDataFromCell(e,t){switch(this.cellOrder[t]){case"year":case"sold":case"available":return Number(e.textContent);case"genres":return e.textContent.split(/,\s{0,}/).filter((e=>""!==e)).map(o);case"price":{const t=e.textContent;return"$"===t[0]?Number(t.slice(1)):Number(t)}default:return e.textContent}}}(n))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,